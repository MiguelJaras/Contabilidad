/*
'===============================================================================
'  Company: RMM
'  Autor: Rubén Mora Martínez
'  Date: 2011-07-29
'  **** Generated by MyGeneration Version # (1.3.0.3) ****
'===============================================================================
*/

using System;
using System.Data;
using System.Data.SqlClient;
using System.Collections;
using System.Collections.Specialized;
using Microsoft.ApplicationBlocks.Data;
using Contabilidad.Entity;

namespace Contabilidad.DataAccess
{
    public class DACPoliza : Base
	{
        #region GetList
        public static DataTable GetList(int intEmpresa, int intEjercicio, string strPoliza)
        {
            DataSet ds;

            SqlParameter[] arrPar = new SqlParameter[3];
            arrPar[0] = new SqlParameter("@intEmpresa", SqlDbType.Int);
            arrPar[0].Value = intEmpresa;
            arrPar[1] = new SqlParameter("@strPoliza", SqlDbType.VarChar);
            arrPar[1].Value = strPoliza;
            arrPar[2] = new SqlParameter("@intEjercicio", SqlDbType.Int);
            arrPar[2].Value = intEjercicio;

            try
            {
                ds = SqlHelper.ExecuteDataset(ConnectionString, CommandType.StoredProcedure, "usp_tbPolizasDet_Fill", arrPar);
                return ds.Tables[0];
            }
            catch (Exception e)
            {
                return null;
            }
        }
        #endregion
			
	    #region Fill
        public static Entity_Poliza Fill(int intEmpresa, int intEjercicio, string strPoliza)
			{
                IDataReader drd;
                Entity_Poliza obj;
                obj = new Entity_Poliza();

                try
                {
                    drd = SqlHelper.ExecuteReader(ConnectionString, CommandType.Text, "SELECT E.strNombre as Empresa,CONVERT(VARCHAR(12),datFecha,103) AS Fecha, T.strNombre AS TipoPoliza, strPoliza FROM VetecMarfilAdmin.dbo.tbPolizasEnc PE INNER JOIN VetecMarfilAdmin.dbo.tbEmpresas E ON E.intEmpresa = PE.intEmpresa INNER JOIN VetecMarfilAdmin.dbo.tbTiposPoliza T ON T.strTipoPoliza = PE.strTipoPoliza AND PE.intEmpresa = T.intEmpresa WHERE PE.intEmpresa =" + intEmpresa + " AND strPoliza = '" + strPoliza + "'" + " AND PE.intEjercicio=" + intEjercicio.ToString());
                    if (drd.Read())
                    {
                        obj = CreateObject(drd);
                    }
                }
                catch (Exception e)
                {
                    obj = null;
                }

                return obj;									
			}
			#endregion            

        #region Create
        static Entity_Poliza CreateObject(IDataReader drd)
            {
                Entity_Poliza obj;
                obj = new Entity_Poliza();

                obj.Empresa = (string)drd["Empresa"];
                obj.Fecha = (string)drd["Fecha"];
                obj.StrPoliza = (string)drd["StrPoliza"];
                obj.TipoPoliza = (string)drd["TipoPoliza"];

                return obj;
            }
			#endregion

        #region Close
        public static string Close(Entity_Poliza obj)
        {
            string result = "";
           
            try
            {
                result = SqlHelper.ExecuteScalar(ConnectionString, CommandType.Text, "SELECT dbo.fn_tbPolizasDet_Close(" + obj.IntEmpresa.ToString() + "," + obj.IntEjercicio.ToString() + "," + obj.IntMes.ToString() + "," + obj.IntModulo.ToString() + ")").ToString();
            }
            catch (Exception e)
            {
                throw e;
            }

            return result;
        }
        #endregion

        #region GetListAfecta
        public static DataTable GetListAfecta(Entity_Poliza obj)
        {
            DataSet ds;

            SqlParameter[] arrPar = new SqlParameter[14];
            arrPar[0] = new SqlParameter("@intEmpresa", SqlDbType.Int);
            arrPar[0].Value = obj.IntEmpresa;
            arrPar[1] = new SqlParameter("@intEjercicio", SqlDbType.Int);
            arrPar[1].Value = obj.IntEjercicio;
            arrPar[2] = new SqlParameter("@intMes", SqlDbType.Int);
            arrPar[2].Value = obj.IntMes;
            arrPar[3] = new SqlParameter("@strTipoPoliza", SqlDbType.VarChar);
            arrPar[3].Value = obj.StrObraInicial;
            arrPar[4] = new SqlParameter("@strTipoPolizaFin", SqlDbType.VarChar);
            arrPar[4].Value = obj.StrObraFinal;
            arrPar[5] = new SqlParameter("@intFolioIni", SqlDbType.Int);
            arrPar[5].Value = obj.IntFolioInicial;
            arrPar[6] = new SqlParameter("@intFolioFin", SqlDbType.Int);
            arrPar[6].Value = obj.intFolioFinal;
            arrPar[7] = new SqlParameter("@intAfectada", SqlDbType.Int);
            arrPar[7].Value = obj.IntAfectada;
            arrPar[8] = new SqlParameter("@intDirection", SqlDbType.Int);
            arrPar[8].Value = obj.SortDirection;
            arrPar[9] = new SqlParameter("@SortExpression", SqlDbType.VarChar);
            arrPar[9].Value = obj.SortExpression;
            arrPar[10] = new SqlParameter("@NumPage", SqlDbType.Int);
            arrPar[10].Value = obj.iNumPage;
            arrPar[11] = new SqlParameter("@NumRecords", SqlDbType.Int);
            arrPar[11].Value = obj.iNumRecords;
            arrPar[12] = new SqlParameter("@TotalRows", SqlDbType.Int);
            arrPar[12].Direction = ParameterDirection.Output;
            arrPar[13] = new SqlParameter("@TotalPage", SqlDbType.Int);
            arrPar[13].Direction = ParameterDirection.Output;	

            try
            {
                ds = SqlHelper.ExecuteDataset(ConnectionString, CommandType.StoredProcedure, "VetecMarfilAdmin.dbo.usp_tbPolizasEnc_List", arrPar);
                obj.IntTotalPages = (int)arrPar[13].Value;
                obj.IntTotalRecords = (int)arrPar[12].Value;
                return ds.Tables[0];
            }
            catch (Exception e)
            {
                return null;
            }
        }
        #endregion             

        #region ValAfecta
        public static string ValAfecta()
        {
            string result = "";

            try
            {
                result = SqlHelper.ExecuteScalar(ConnectionString, CommandType.Text, "SELECT ISNULL((Select 1 from(SELECT * FROM sys.dm_exec_requests where sql_handle is not null) a CROSS APPLY sys.dm_exec_sql_text(a.sql_handle) t where t.text like '%RUNNING AFECTA%' and t.objectid = OBJECT_ID('VetecMarfiladmin.dbo.usp_tbPolizas_AfectaPoliza')),0)").ToString();
            }
            catch (Exception e)
            {
                result = "0";
            }

            return result;
        }
        #endregion

        #region Afecta
        public static string Afecta(Entity_Poliza obj)
        {
            string result = "";

            SqlParameter[] arrPar = new SqlParameter[10];
            arrPar[0] = new SqlParameter("@intEmpresa", SqlDbType.Int);
            arrPar[0].Value = obj.IntEmpresa;
            arrPar[1] = new SqlParameter("@intEjercicio", SqlDbType.Int);
            arrPar[1].Value = obj.IntEjercicio;
            arrPar[2] = new SqlParameter("@intMes", SqlDbType.Int);
            arrPar[2].Value = obj.IntMes;
            arrPar[3] = new SqlParameter("@strTipoPoliza", SqlDbType.VarChar);
            arrPar[3].Value = obj.StrObraInicial;
            arrPar[4] = new SqlParameter("@strTipoFin", SqlDbType.VarChar);
            arrPar[4].Value = obj.StrObraFinal;
            arrPar[5] = new SqlParameter("@intFolioIni", SqlDbType.Int);
            arrPar[5].Value = obj.IntFolioInicial;
            arrPar[6] = new SqlParameter("@intFolioFin", SqlDbType.Int);
            arrPar[6].Value = obj.intFolioFinal;
            arrPar[7] = new SqlParameter("@intAfecta", SqlDbType.Int);
            arrPar[7].Value = obj.IntAfectada;
            arrPar[8] = new SqlParameter("@strUsuario", SqlDbType.VarChar);
            arrPar[8].Value = obj.StrUsuario;
            arrPar[9] = new SqlParameter("@strMaquina", SqlDbType.VarChar);
            arrPar[9].Value = obj.StrMaquina;

            try
            {
                SqlHelper.ExecuteScalar(ConnectionString, CommandType.StoredProcedure, "VetecMarfilAdmin..usp_tbPolizas_AfectaPoliza", arrPar);
            }
            catch (Exception e)
            {
                throw e;
            }

            return result;
        }
        #endregion

        #region DesaAfectarTodo
        public static string DesaAfectarTodo(Entity_Poliza obj)
        {
            string result = "";

            SqlParameter[] arrPar = new SqlParameter[9];
            arrPar[0] = new SqlParameter("@intEmpresa", SqlDbType.Int);
            arrPar[0].Value = obj.IntEmpresa;
            arrPar[1] = new SqlParameter("@intEjercicio", SqlDbType.Int);
            arrPar[1].Value = obj.IntEjercicio;
            arrPar[2] = new SqlParameter("@intMes", SqlDbType.Int);
            arrPar[2].Value = obj.IntMes;
            arrPar[3] = new SqlParameter("@strTipoPoliza", SqlDbType.VarChar);
            arrPar[3].Value = "0";
            arrPar[4] = new SqlParameter("@strTipoFin", SqlDbType.VarChar);
            arrPar[4].Value = "0";
            arrPar[5] = new SqlParameter("@intFolioIni", SqlDbType.Int);
            arrPar[5].Value = 0;
            arrPar[6] = new SqlParameter("@intFolioFin", SqlDbType.Int);
            arrPar[6].Value = 0;
            arrPar[7] = new SqlParameter("@strUsuario", SqlDbType.VarChar);
            arrPar[7].Value = obj.StrUsuario;
            arrPar[8] = new SqlParameter("@strMaquina", SqlDbType.VarChar);
            arrPar[8].Value = obj.StrMaquina;

            try
            {
                SqlHelper.ExecuteScalar(ConnectionString, CommandType.StoredProcedure, "VetecMarfilAdmin..usp_tbPolizas_DesafectarTodo", arrPar);
            }
            catch (Exception e)
            {
                throw e;
            }

            return result;
        }
        #endregion

        #region Auxiliar
        public static DataTable Auxiliar(int intEmpresa, int aux)
        {
            DataSet ds;

            SqlParameter[] arrPar = new SqlParameter[2];
            arrPar[0] = new SqlParameter("@intEmpresa", SqlDbType.Int);
            arrPar[0].Value = intEmpresa;
            arrPar[1] = new SqlParameter("@auxiliar", SqlDbType.Int);
            arrPar[1].Value = aux;

            try
            {
                ds = SqlHelper.ExecuteDataset(ConnectionString, CommandType.StoredProcedure, "VetecMarfilAdmin..usp_tbPolizasEnc_AuxiliarVal", arrPar);
                return ds.Tables[0];
            }
            catch (Exception e)
            {
                return null;
            }
        }
        #endregion  

        #region SaldosIniciales
        public static string SaldosIniciales(Entity_PolizasDet obj)
        {
            string result = "";

            SqlParameter[] arrPar = new SqlParameter[3];
            arrPar[0] = new SqlParameter("@intEmpresa", SqlDbType.Int);
            arrPar[0].Value = obj.IntEmpresa;
            arrPar[1] = new SqlParameter("@intAnio", SqlDbType.Int);
            arrPar[1].Value = obj.intEjercicio;
            arrPar[2] = new SqlParameter("@strCuenta", SqlDbType.VarChar);
            arrPar[2].Value = obj.strCuenta;

            try
            {
                result = SqlHelper.ExecuteScalar(ConnectionString, CommandType.StoredProcedure, "VetecMarfilAdmin..usp_tbCuentasSaldos_SaldosIniciales", arrPar).ToString();
            }
            catch (Exception e)
            {
                throw e;
            }
            return result;
        }
        #endregion  
		
        #region PolizaIva
        public static DataTable PolizaIva(Entity_PolizasDet obj)
        {
            DataSet ds;

            SqlParameter[] arrPar = new SqlParameter[3];
            arrPar[0] = new SqlParameter("@intEmpresa", SqlDbType.Int);
            arrPar[0].Value = obj.IntEmpresa;
            arrPar[1] = new SqlParameter("@intDireccion", SqlDbType.VarChar);
            arrPar[1].Value = obj.strDescripcion;
            arrPar[2] = new SqlParameter("@SortExpression", SqlDbType.VarChar);
            arrPar[2].Value = obj.SortDirection;

            try
            {
                ds = SqlHelper.ExecuteDataset(ConnectionString, CommandType.StoredProcedure, "usp_tbIvaControl_List", arrPar);
                return ds.Tables[0];
            }
            catch (Exception e)
            {
                return null;
            }
        }
        #endregion  

        #region SelPolizaIva
        public static string SelPolizaIva(int intEmpresa, int intEjercicio, int intMes)
        {
            string result = "";

            SqlParameter[] arrPar = new SqlParameter[9];
            arrPar[0] = new SqlParameter("@intEmpresa", SqlDbType.Int);
            arrPar[0].Value = intEmpresa;
            arrPar[1] = new SqlParameter("@intEjercicio", SqlDbType.Int);
            arrPar[1].Value = intEjercicio;
            arrPar[2] = new SqlParameter("@intMes", SqlDbType.Int);
            arrPar[2].Value = intMes;

            try
            {
                SqlHelper.ExecuteScalar(ConnectionString, CommandType.StoredProcedure, "vetecmarfiladmin..usp_tbPolizasIva_Cierre", arrPar);
            }
            catch (Exception e)
            {
                throw e;
            }

            return result;
        }
        #endregion

        #region SavePolizaIva
        public static string SavePolizaIva( Entity_Poliza obj)
        {
            string result = "";
            SqlParameter[] arrPar = new SqlParameter[5];
            arrPar[0] = new SqlParameter("@intEmpresa", SqlDbType.Int);
            arrPar[0].Value = obj.IntEmpresa;
            arrPar[1] = new SqlParameter("@intEjercicio", SqlDbType.Int);
            arrPar[1].Value = obj.IntEjercicio;
            arrPar[2] = new SqlParameter("@intMes", SqlDbType.Int);
            arrPar[2].Value = obj.IntMes;
            arrPar[3] = new SqlParameter("@strUsuario", SqlDbType.VarChar);
            arrPar[3].Value = obj.StrUsuario;
            arrPar[4] = new SqlParameter("@strMaquina", SqlDbType.VarChar);
            arrPar[4].Value = obj.StrMaquina;

            try
            {
                result = SqlHelper.ExecuteScalar(ConnectionString, CommandType.StoredProcedure, "usp_tbIvaControl_Save", arrPar).ToString();
            }
            catch (Exception e)
            {
                throw e;
            }

            return result;
        }
        #endregion
        
        #region Encabezados
        public static string Encabezados(Entity_Poliza obj)
        {
            string value = "";

            SqlParameter[] arrPar = new SqlParameter[4];
            arrPar[0] = new SqlParameter("@intEmpresa", SqlDbType.Int);
            arrPar[0].Value = obj.IntEmpresa;
            arrPar[1] = new SqlParameter("@strTipoPoliza", SqlDbType.VarChar);
            arrPar[1].Value = obj.StrObraInicial;
            arrPar[2] = new SqlParameter("@intEjercicio", SqlDbType.Int);
            arrPar[2].Value = obj.IntEjercicio;
            arrPar[3] = new SqlParameter("@intMes", SqlDbType.Int);
            arrPar[3].Value = obj.IntMes;                      

            try
            {
                value = SqlHelper.ExecuteScalar(ConnectionString, CommandType.StoredProcedure, "VetecMarfilAdmin.dbo.qryINCN2020_Upd_CuadrarEncabezados", arrPar).ToString();
                return value;
            }
            catch (Exception e)
            {
                return value;
            }
        }
        #endregion  

        #region ER
        public static string ER(Entity_PolizasDet obj)
        {
            string result = "";

            SqlParameter[] arrPar = new SqlParameter[3];
            arrPar[0] = new SqlParameter("@intEmpresa", SqlDbType.Int);
            arrPar[0].Value = obj.IntEmpresa;
            arrPar[1] = new SqlParameter("@intEjercicio", SqlDbType.Int);
            arrPar[1].Value = obj.intEjercicio;
            arrPar[2] = new SqlParameter("@intMes", SqlDbType.Int);
            arrPar[2].Value = obj.intMes;

            try
            {
                result = SqlHelper.ExecuteScalar(ConnectionString, CommandType.StoredProcedure, "VetecMarfilAdmin..usp_Update_ER", arrPar).ToString();
            }
            catch (Exception e)
            {
                throw e;
            }
            return result;
        }
        #endregion  

	}
}
