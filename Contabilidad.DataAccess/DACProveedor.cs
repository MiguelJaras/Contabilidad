/*
'===============================================================================
'  Company: RMM
'  Autor: Rubén Mora Martínez
'  Date: 2011-07-29
'  **** Generated by MyGeneration Version # (1.3.0.3) ****
'===============================================================================
*/

using System;
using System.Data;
using System.Data.SqlClient;
using System.Collections;
using System.Collections.Specialized;
using Microsoft.ApplicationBlocks.Data;
using Contabilidad.Entity;

namespace Contabilidad.DataAccess
{
    public class DACProveedor : Base
	{              

		#region GetList
			public static DataTable GetList(Entity_Proveedor oEnt_catStatus)
			{
                DataSet ds;

                SqlParameter[] arrPar = new SqlParameter[7];
                //arrPar[0] = new SqlParameter("@p_IdStatus", SqlDbType.Int);
                //arrPar[0].Value = oEnt_catStatus.IdStatus;
                //arrPar[1] = new SqlParameter("@p_VcStatusName", SqlDbType.VarChar);
                //arrPar[1].Value = oEnt_catStatus.VcStatusName;
                //arrPar[2] = new SqlParameter("@p_BActivo", SqlDbType.Bit);
                //arrPar[2].Value = oEnt_catStatus.BActivo;
                arrPar[3] = new SqlParameter("@p_iNumPage", SqlDbType.Int);
                arrPar[3].Value = oEnt_catStatus.iNumPage;
                arrPar[4] = new SqlParameter("@p_iNumRecords", SqlDbType.Int);
                arrPar[4].Value = oEnt_catStatus.iNumRecords;
                arrPar[5] = new SqlParameter("@p_SortDirection", SqlDbType.TinyInt);
                arrPar[5].Value = oEnt_catStatus.SortDirection;
                arrPar[6] = new SqlParameter("@p_SortExpression", SqlDbType.VarChar);
                arrPar[6].Value = oEnt_catStatus.SortExpression;

                try
                {
                    ds = SqlHelper.ExecuteDataset(ConnectionString, CommandType.StoredProcedure, "usp_catStatus_sel", arrPar);
                    return ds.Tables[0];
                }
                catch (Exception e)
                {
                    return null;
                }									
			}
			#endregion
		
        #region Sel
        public static DataTable Sel(Entity_Proveedor obj)
        {
            DataSet ds;

            Entity_Proveedor oEntity_Clientes;
            oEntity_Clientes = new Entity_Proveedor();

            SqlParameter[] arrPar = new SqlParameter[2];
            arrPar[0] = new SqlParameter("@intEmpresa", SqlDbType.Int);
            arrPar[0].Value = obj.IntEmpresa;
            arrPar[1] = new SqlParameter("@intProveedor", SqlDbType.Int );
            arrPar[1].Value = obj.IntProveedor;

            try
            {
                ds = SqlHelper.ExecuteDataset(ConnectionString, CommandType.Text, "SELECT intProveedor AS id FROM vetecmarfiladmin..tbProveedores WHERE intEmpresa = " + obj.IntEmpresa + "AND intProveedor =" + obj.IntProveedor);
                //ds = SqlHelper.ExecuteDataset(ConnectionString, CommandType.StoredProcedure, "usp_tbProveedores_Sel", arrPar);
                return ds.Tables[0];
            }
            catch (Exception e)
            {
                return null;
            }
        }
        #endregion  
		
		#region Fill
        public static Entity_Proveedor Fill(Entity_Proveedor obj)
			{
                IDataReader drd;
                Entity_Proveedor oEntity_Proveedor;
                oEntity_Proveedor = new Entity_Proveedor();               

                try
                {
                    drd = SqlHelper.ExecuteReader(ConnectionString, CommandType.Text, "SELECT P.intProveedor, P.strNombre,P.strCCProv,C.intDias AS intCondicionPago,P.intMovto, P.strEmail FROM VetecMarfilAdmin..tbProveedores P INNER JOIN VetecMarfilAdmin..tbCondicionPago C ON C.intCondicionPago = P.intCondicionPago WHERE P.intEmpresa = " + obj.IntEmpresa.ToString() + " AND P.intProveedor = " + obj.IntProveedor.ToString());
                    if (drd.Read())
                    {
                        oEntity_Proveedor = CreateObject(drd);
                    }
                }
                catch (Exception e)
                {
                    oEntity_Proveedor = null;
                }

                return oEntity_Proveedor;											
			}
			#endregion

        #region GetListCbo
        public static DataTable GetListCbo()
            {
                DataSet ds;

                try
                {
                    ds = SqlHelper.ExecuteDataset(ConnectionString, CommandType.StoredProcedure, "usp_catStatus_cbo");
                    return ds.Tables[0];
                }
                catch (Exception e)
                {
                    return null;
                }	                
            }
            #endregion GetListCbo										        
				
		#region Create 
        static Entity_Proveedor CreateObject(IDataReader drd)
            {
				Entity_Proveedor obj;
                obj = new Entity_Proveedor();

                obj.IntProveedor = (int)drd["IntProveedor"];
                obj.StrNombre = (string)drd["StrNombre"];
                obj.IntCondicionPago = (int)drd["intCondicionPago"];
                obj.StrCCProv = (string)drd["strCCProv"];
                obj.IntMovto = (int)drd["intMovto"];
                obj.Email = (string)drd["strEmail"];
            
                try
                {
                    obj.iNumPage = (int)drd["iTotalPages"];
                    obj.iNumRecords = (int)drd["iTotalRecords"];

                }
                catch (Exception e)
                {

                }

                return obj;
            }
			#endregion

        #region UpdateMail
        public static bool UpdateMail(Entity_Proveedor obj)
        {

            bool bResult = false;           

            try
            {
                SqlHelper.ExecuteNonQuery(ConnectionString, CommandType.Text, "UPDATE VetecMarfilAdmin..tbProveedores SET strEmail ='" + obj.Email + "' WHERE intEmpresa =" + obj.IntEmpresa.ToString() + " AND intProveedor = " + obj.IntProveedor.ToString());
                bResult = false;
            }
            catch (Exception e)
            {
                throw e;
            }

            return bResult;
        }
        #endregion Delete

	}
}
