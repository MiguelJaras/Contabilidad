/*
'===============================================================================
'  Company: RMM
'  Autor: Rubén Mora Martínez
'  Date: 2011-07-29
'  **** Generated by MyGeneration Version # (1.3.0.3) ****
'===============================================================================
*/

using System;
using System.Data;
using System.Data.SqlClient;
using System.Collections;
using System.Collections.Specialized;
using Microsoft.ApplicationBlocks.Data;
using Contabilidad.Entity;

namespace Contabilidad.DataAccess
{
    public class DACObra : Base
    {
        #region RepFinancieroObra
        public static DataTable RepFinancieroObra(int empresa, int intEstado, DateTime datFechaIni, DateTime datFechaFin, string strCCIni, string strCCFin, string strQuitar, string size)
        {
            DataSet ds;

            SqlParameter[] arrPar = new SqlParameter[7];
            arrPar[0] = new SqlParameter("@intEmpresa", SqlDbType.Int);
            arrPar[0].Value = empresa;
            arrPar[1] = new SqlParameter("@intEstadoFin", SqlDbType.Int);
            arrPar[1].Value = intEstado;
            arrPar[2] = new SqlParameter("@datFechaIni", SqlDbType.DateTime);
            arrPar[2].Value = datFechaIni;
            arrPar[3] = new SqlParameter("@datFechaFin", SqlDbType.DateTime);
            arrPar[3].Value = datFechaFin;
            arrPar[4] = new SqlParameter("@strCCIni", SqlDbType.VarChar);
            arrPar[4].Value = strCCIni;
            arrPar[5] = new SqlParameter("@strCCFin", SqlDbType.VarChar);
            arrPar[5].Value = strCCFin;
            arrPar[6] = new SqlParameter("@strQuitar", SqlDbType.VarChar);
            arrPar[6].Value = strQuitar;


            try
            {
                ds = SqlHelper.ExecuteDataset(ConnectionString, CommandType.StoredProcedure, "VetecMarfilAdmin..qryINCN4070_Sel_Rep_Financieros_Obra", arrPar);
                return ds.Tables[0];
            }
            catch (Exception e)
            {
                return null;
            }



        }
        #endregion RepFinancieroObra

        #region SelStrCv
        public static Entity_Obra SelStrCv(Entity_Obra obj)
        {
            IDataReader drd;
            Entity_Obra oEntity_Obra;
            oEntity_Obra = new Entity_Obra();

            try
            {
                SqlParameter[] arrPar = new SqlParameter[2];
                arrPar[0] = new SqlParameter("@intEmpresa", SqlDbType.Int);
                arrPar[0].Value = obj.IntEmpresa;
                arrPar[1] = new SqlParameter("@strClave", SqlDbType.VarChar);
                arrPar[1].Value = obj.StrClave;

                drd = SqlHelper.ExecuteReader(ConnectionString, CommandType.StoredProcedure, "VetecMarfilAdmin..usp_tbObra_SelStrClave", arrPar);
                if (drd.Read())
                {
                    oEntity_Obra = CreateObject(drd);
                }
                else
                {
                    oEntity_Obra = null;
                }
            }
            catch (Exception e)
            {
                oEntity_Obra = null;
            }

            return oEntity_Obra;
        }
        #endregion

        #region Sel
        public static Entity_Obra Sel(Entity_Obra obj)
        {
            IDataReader drd;
            Entity_Obra oEntity_Obra;
            oEntity_Obra = new Entity_Obra();

            try
            {
                SqlParameter[] arrPar = new SqlParameter[2];
                arrPar[0] = new SqlParameter("@intEmpresa", SqlDbType.Int);
                arrPar[0].Value = obj.IntEmpresa;
                arrPar[1] = new SqlParameter("@intObra", SqlDbType.VarChar);
                arrPar[1].Value = obj.IntObra;

                drd = SqlHelper.ExecuteReader(ConnectionString, CommandType.StoredProcedure, "VetecMarfilAdmin..usp_tbObra_Sel", arrPar);
                if (drd.Read())
                {
                    oEntity_Obra = CreateObject(drd);
                }
                else
                {
                    oEntity_Obra = null;
                }
            }
            catch (Exception e)
            {
                oEntity_Obra = null;
            }

            return oEntity_Obra;
        }
        #endregion

        #region SelDt
        public static DataTable SelDt(Entity_Obra obj)
        {
            IDataReader drd;
            DataSet ds;
            Entity_Obra oEntity_Obra;
            oEntity_Obra = new Entity_Obra();

            SqlParameter[] arrPar = new SqlParameter[2];
            arrPar[0] = new SqlParameter("@intEmpresa", SqlDbType.Int);
            arrPar[0].Value = obj.IntEmpresa;
            arrPar[1] = new SqlParameter("@intObra", SqlDbType.VarChar);
            arrPar[1].Value = obj.IntObra;

            try
            {
                ds = SqlHelper.ExecuteDataset(ConnectionString, CommandType.StoredProcedure, "usp_tbObra_Sel", arrPar);
                return ds.Tables[0];
            }
            catch (Exception e)
            {
                return null;
            }
        }
        #endregion

        #region GetList
        public static DataTable GetList(Entity_Obra colonia)
        {
            DataSet ds;

            SqlParameter[] arrPar = new SqlParameter[3];
            arrPar[0] = new SqlParameter("@intEmpresa", SqlDbType.Int);
            arrPar[0].Value = colonia.IntEmpresa;

            try
            {
                ds = SqlHelper.ExecuteDataset(ConnectionString, CommandType.StoredProcedure, "usp_tbObra_List", arrPar);
                return ds.Tables[0];
            }
            catch (Exception e)
            {
                return null;
            }
        }
        #endregion

        #region GetByCode
        public static Entity_Obra GetByCode(Entity_Obra obra)
        {
            IDataReader drd;
            Entity_Obra oEntity_Obra;
            oEntity_Obra = new Entity_Obra();

            try
            {
                drd = SqlHelper.ExecuteReader(ConnectionString, CommandType.Text, "SELECT intObra,strClave,CASE WHEN intEmpresa NOT IN(1,5) THEN 11 ELSE intTipoObra END AS intTipoObra,ISNULL(intAlmacen,0) AS intAlmacen,ISNULL(intSubAlmacen,0) AS intSubAlmacen, strNombre as strNombre FROM tbObra O WHERE intEmpresa=" + obra.IntEmpresa + " AND intSucursal=" + obra.IntSucursal + " AND strClave='" + obra.StrClave + "'");
                if (drd.Read())
                {
                    oEntity_Obra = CreateObject(drd);
                }
                else
                    oEntity_Obra = null;
            }
            catch (Exception e)
            {
                oEntity_Obra = null;
            }

            return oEntity_Obra;
        }
        #endregion

        #region Fill
        public static Entity_Obra Fill(Entity_Obra obra)
        {
            IDataReader drd;
            Entity_Obra oEntity_Obra;
            oEntity_Obra = new Entity_Obra();

            try
            {
                drd = SqlHelper.ExecuteReader(ConnectionString, CommandType.Text, "SELECT intObra,strClave,CASE WHEN intEmpresa NOT IN(1,5) THEN 11 ELSE intTipoObra END AS intTipoObra,ISNULL(intAlmacen,0) AS intAlmacen,ISNULL(intSubAlmacen,0) AS intSubAlmacen, strNombre as strNombre FROM tbObra O WHERE intEmpresa=" + obra.IntEmpresa + " AND intSucursal=" + obra.IntSucursal + " AND intObra=" + obra.IntObra.ToString());
                if (drd.Read())
                {
                    oEntity_Obra = CreateObject(drd);
                }
                else
                    oEntity_Obra = null;
            }
            catch (Exception e)
            {
                oEntity_Obra = null;
            }

            return oEntity_Obra;
        }
        #endregion
        #region Fill2
        public static Entity_Obra Fill2(Entity_Obra obra)
        {
            IDataReader drd;
            Entity_Obra oEntity_Obra;
            oEntity_Obra = new Entity_Obra();

            try
            {
                drd = SqlHelper.ExecuteReader(ConnectionString, CommandType.Text, "SELECT intObra,strClave,CASE WHEN intEmpresa NOT IN(1,5) THEN 11 ELSE intTipoObra END AS intTipoObra,ISNULL(intAlmacen,0) AS intAlmacen,ISNULL(intSubAlmacen,0) AS intSubAlmacen, strNombre as strNombre FROM tbObra O WHERE intObra=" + obra.IntObra.ToString());
                if (drd.Read())
                {
                    oEntity_Obra = CreateObject(drd);
                }
                else
                    oEntity_Obra = null;
            }
            catch (Exception e)
            {
                oEntity_Obra = null;
            }

            return oEntity_Obra;
        }
        #endregion

        #region Create
        static Entity_Obra CreateObject(IDataReader drd)
        {
            Entity_Obra obj;
            obj = new Entity_Obra();

            obj.StrClave = (string)drd["StrClave"];
            obj.StrNombre = (string)drd["strNombre"];
            obj.IntObra = (int)drd["IntObra"];
            obj.IntTipoObra = (int)drd["IntTipoObra"];
            obj.IntAlmacen = (int)drd["IntAlmacen"];
            obj.IntSubAlmacen = (int)drd["IntSubAlmacen"];

            return obj;
        }
        #endregion

        #region QueryHelp
        public override string QueryHelp(int intEmpresa, int intSucursal, string[] parametros, int version)
        {
            string value = "";
            string parameter = "";

            for (int i = 0; i < parametros.Length; i++)
            {
                parameter = parameter + parametros[i].ToString() + ",";
            }

            SqlParameter[] arrPar = new SqlParameter[4];
            arrPar[0] = new SqlParameter("@intEmpresa", SqlDbType.Int);
            arrPar[0].Value = intEmpresa;
            arrPar[1] = new SqlParameter("@intSucursal", SqlDbType.Int);
            arrPar[1].Value = intSucursal;
            arrPar[2] = new SqlParameter("@intVersion", SqlDbType.Int);
            arrPar[2].Value = version;
            arrPar[3] = new SqlParameter("@strParametros", SqlDbType.VarChar);
            arrPar[3].Value = parameter;
            try
            {
                value = SqlHelper.ExecuteScalar(ConnectionString, CommandType.StoredProcedure, "VetecMarfilAdmin..usp_tbObra_Help_", arrPar).ToString();
                return value;
            }
            catch (Exception e)
            {
                return "";
            }
        }
        #endregion
        #region QueryHelpData
        public override DataSet QueryHelpData(int intColonia, int intSector, string[] parametros, int version)
        {
            DataSet DS;
            string parameter = "";

            for (int i = 0; i < parametros.Length; i++)
            {
                parameter = parameter + parametros[i].ToString() + ",";
            }

            SqlParameter[] arrPar = new SqlParameter[2];
            arrPar[0] = new SqlParameter("@intColonia", SqlDbType.Int);
            arrPar[0].Value = parametros[0];
            arrPar[1] = new SqlParameter("@intSector", SqlDbType.Int);
            arrPar[1].Value = parametros[1];
            try
            {
                DS = SqlHelper.ExecuteDataset(ConnectionString, CommandType.StoredProcedure, "VetecMarfil..usp_tbObra_ListSec", arrPar);
                return DS;
            }
            catch (Exception e)
            {
                return null;
            }
        }
        #endregion
        #region gettable
        public static DataTable GetTableControlObra(string intColonia, string intSector, string intObra)
        {
            DataSet ds;

            SqlParameter[] arrPar = new SqlParameter[5];
            arrPar[0] = new SqlParameter("@intColonia", SqlDbType.Int);
            arrPar[0].Value = Convert.ToInt32(intColonia);
            arrPar[1] = new SqlParameter("@intSector", SqlDbType.Int);
            arrPar[1].Value = Convert.ToInt32(intSector);
            arrPar[2] = new SqlParameter("@intObra", SqlDbType.Int);
            arrPar[2].Value = Convert.ToInt32(intObra);

            try
            {
                ds = SqlHelper.ExecuteDataset(ConnectionString, CommandType.StoredProcedure, "VetecMarfil..usp_tbObra_ER", arrPar);
                return ds.Tables[0];
            }
            catch (Exception e)
            {
                return null;
            }
        }
        #endregion
        public static DataTable GetObrasExcel(string strObras)
        {
            DataSet ds;
            //string result = "";

            try
            {

                string query = @"SELECT strClave FROM tbObra WHERE intObra in(" + strObras + ") ORDER BY strClave";

                ds = SqlHelper.ExecuteDataset(ConnectionString, CommandType.Text, query);
                return ds.Tables[0];
            }
            catch (Exception e)
            {

                return null;
            }


        }
        public static DataTable GetTableControlObraPrecios(string obras)
        {
            DataSet ds;

            SqlParameter[] arrPar = new SqlParameter[1];
            arrPar[0] = new SqlParameter("@strObras", SqlDbType.VarChar);
            arrPar[0].Value = obras;

            try
            {
                ds = SqlHelper.ExecuteDataset(ConnectionString, CommandType.StoredProcedure, "VetecMarfil..usp_tbcontrolobra_Precioxls", arrPar);
                return ds.Tables[0];
            }
            catch (Exception e)
            {
                return null;
            }
        }
        public static DataTable GetTableControlObraResumen(string obras, string strIva, string strIndirectos, string strFactor, string strProteccion)
        {
            DataSet ds;

            SqlParameter[] arrPar = new SqlParameter[5];
            arrPar[0] = new SqlParameter("@strObras", SqlDbType.VarChar);
            arrPar[0].Value = obras;
            arrPar[1] = new SqlParameter("@param1", SqlDbType.Decimal);
            arrPar[1].Value = Convert.ToDecimal(strIva);
            arrPar[2] = new SqlParameter("@param2", SqlDbType.Decimal);
            arrPar[2].Value = Convert.ToDecimal(strIndirectos);
            arrPar[3] = new SqlParameter("@param3", SqlDbType.Decimal);
            arrPar[3].Value = Convert.ToDecimal(strFactor);
            arrPar[4] = new SqlParameter("@param4", SqlDbType.Decimal);
            arrPar[4].Value = Convert.ToDecimal(strProteccion);
            try
            {
                ds = SqlHelper.ExecuteDataset(ConnectionString, CommandType.StoredProcedure, "VetecMarfil..usp_tbcontrolobra_ResumenObras", arrPar);
                return ds.Tables[0];
            }
            catch (Exception e)
            {
                return null;
            }
        }

        public static DataTable GetFrenteExcel(string intObra)
        {
            DataSet ds;
            //string result = "";

            try
            {

                string query = @"SELECT intFrente, CONVERT(int, strClave) AS strClave FROM tbPUFrente WHERE intObra = " + intObra + " ORDER BY CONVERT(int, strClave)";

                ds = SqlHelper.ExecuteDataset(ConnectionString, CommandType.Text, query);
                return ds.Tables[0];
            }
            catch (Exception e)
            {

                return null;
            }


        }

        public static DataTable GetPartidaExcel(string intObra)
        {
            DataSet ds;
            //string result = "";

            try
            {

                string query = @"SELECT intPartida, strClave +' ' + strDescripcion as strClave FROM tbPUPartida WHERE intObra = " + intObra + " ORDER BY CONVERT(int, strClave)";

                ds = SqlHelper.ExecuteDataset(ConnectionString, CommandType.Text, query);
                return ds.Tables[0];
            }
            catch (Exception e)
            {

                return null;
            }


        }


    }
}
