/*
'===============================================================================
'  Company: RMM
'  Autor: Rubén Mora Martínez
'  Date: 2011-07-29
'  **** Generated by MyGeneration Version # (1.3.0.3) ****
'===============================================================================
*/

using System;
using System.Data;
using System.Data.SqlClient;
using System.Collections;
using System.Collections.Specialized;
using Microsoft.ApplicationBlocks.Data;
using Contabilidad.Entity;

namespace Contabilidad.DataAccess
{
    public class DACUsuario : Base
	{

		#region GetList
        public static DataTable GetList(Entity_Usuarios oEnt_catUser)
			{
                DataSet ds;

                SqlParameter[] arrPar = new SqlParameter[10];
                //arrPar[0] = new SqlParameter("@p_IdUser", SqlDbType.Int);
                //arrPar[0].Value = oEnt_catUser.IdUser;
                //arrPar[1] = new SqlParameter("@p_VcUserShort", SqlDbType.VarChar);
                //arrPar[1].Value = oEnt_catUser.VcUserShort;
                //arrPar[2] = new SqlParameter("@p_VcUserName", SqlDbType.VarChar);
                //arrPar[2].Value = oEnt_catUser.VcUserName;
                //arrPar[3] = new SqlParameter("@p_VcMail", SqlDbType.VarChar);
                //arrPar[3].Value = oEnt_catUser.VcMail;
                //arrPar[4] = new SqlParameter("@p_IdRol", SqlDbType.Int);
                //arrPar[4].Value = oEnt_catUser.IdRol;
                //arrPar[5] = new SqlParameter("@p_BActivo", SqlDbType.Bit);
                //arrPar[5].Value = oEnt_catUser.BActivo;
                //arrPar[6] = new SqlParameter("@p_iNumPage", SqlDbType.Int);
                //arrPar[6].Value = oEnt_catUser.iNumPage;
                //arrPar[7] = new SqlParameter("@p_iNumRecords", SqlDbType.Int);
                //arrPar[7].Value = oEnt_catUser.iNumRecords;
                //arrPar[8] = new SqlParameter("@p_SortDirection", SqlDbType.TinyInt);
                //arrPar[8].Value = oEnt_catUser.SortDirection;
                //arrPar[9] = new SqlParameter("@p_SortExpression", SqlDbType.VarChar);
                //arrPar[9].Value = oEnt_catUser.SortExpression;

                try
                {
                    ds = SqlHelper.ExecuteDataset(ConnectionString, CommandType.StoredProcedure, "usp_catUser_sel", arrPar);
                    return ds.Tables[0];
                }
                catch (Exception e)
                {
                    return null;
                }														
			}
			#endregion
		
		#region Fill
        public static Entity_Usuarios Fill(string strUsuario)
			{
                IDataReader drd;
                Entity_Usuarios oEntity_Usuarios;
                oEntity_Usuarios = new Entity_Usuarios();               
                try
                {
                    drd = SqlHelper.ExecuteReader(ConnectionString, CommandType.Text, "SELECT strUsuario, strNombre FROM tbEmpleado WHERE strUsuario = '" + strUsuario + "'");
                    if (drd.Read())
                    {
                        oEntity_Usuarios = CreateObject(drd);
                    }
                    else
                        oEntity_Usuarios = null;
                }
                catch (Exception e)
                {
                    oEntity_Usuarios = null;
                }

                return oEntity_Usuarios;									
			}
			#endregion            

        #region Login
        public static Entity_Usuarios Login(Entity_Usuarios obj)
            {
                IDataReader drd;
                Entity_Usuarios oEntity_Usuarios;
                oEntity_Usuarios = new Entity_Usuarios();

                SqlParameter[] arrPar = new SqlParameter[2];
                arrPar[0] = new SqlParameter("@strUsuario", SqlDbType.VarChar);
                arrPar[0].Value = obj.StrUsuario;
                arrPar[1] = new SqlParameter("@strPassword", SqlDbType.VarChar);
                arrPar[1].Value = obj.StrPassword;

                try
                {
                    drd = SqlHelper.ExecuteReader(ConnectionString, CommandType.StoredProcedure, "usp_segUsuarios_Login", arrPar);
                    if (drd.Read())
                    {
                        oEntity_Usuarios = CreateObject(drd);
                    }
                    else
                        oEntity_Usuarios = null;
                }
                catch (Exception e)
                {
                    oEntity_Usuarios = null;
                }

                return oEntity_Usuarios;			                               
            }
            #endregion Login
        
        #region Permissions
        public static DataTable Permissions(Entity_Usuarios obj)
        {
            DataSet ds;

            SqlParameter[] arrPar = new SqlParameter[2];
            arrPar[0] = new SqlParameter("@strUsuario", SqlDbType.VarChar);
            arrPar[0].Value = obj.StrUsuario;
            arrPar[1] = new SqlParameter("@intMenu", SqlDbType.Int);
            arrPar[1].Value = obj.IntMenu;

            try
            {
                ds = SqlHelper.ExecuteDataset(ConnectionString, CommandType.StoredProcedure, "usp_tbUsuarios_Permisos", arrPar);
                return ds.Tables[0];
            }
            catch (Exception e)
            {
                return null;
            }
        }
        #endregion

        #region Create
        static Entity_Usuarios CreateObject(IDataReader drd)
            {
                Entity_Usuarios oEnt_catUser;
                oEnt_catUser = new Entity_Usuarios();

                oEnt_catUser.StrUsuario = (string)drd["strUsuario"];
                oEnt_catUser.StrNombre = (string)drd["strNombre"];
                oEnt_catUser.IntPerfil = (int)drd["intPerfil"];
               				
				return oEnt_catUser;
            }
			#endregion

	}
}
