/*
'===============================================================================
'  Company: RMM
'  Autor: Rubén Mora Martínez
'  Date: 2011-07-29
'  **** Generated by MyGeneration Version # (1.3.0.3) ****
'===============================================================================
*/

using System;
using System.Data;
using System.Data.SqlClient;
using System.Collections;
using System.Collections.Specialized;
using Microsoft.ApplicationBlocks.Data;
using Contabilidad.Entity;

namespace Contabilidad.DataAccess
{
    public class DACFactura : Base
	{

        #region Variables

        int _ReturnValue;
        public int ReturnValue
        {
            get { return _ReturnValue; }
            set { _ReturnValue = value; }
        }
        #endregion Variables 
		
		#region GetList
        public static DataTable GetList(Entity_Factura obj)
        {
            DataSet ds;

            SqlParameter[] arrPar = new SqlParameter[2];
            arrPar[0] = new SqlParameter("@intEmpresa", SqlDbType.Int);
            arrPar[0].Value = obj.IntEmpresa;
            arrPar[1] = new SqlParameter("@intContraRecibo", SqlDbType.Int);
            arrPar[1].Value = obj.IntContraRecibo;

            try
            {
                ds = SqlHelper.ExecuteDataset(ConnectionString, CommandType.StoredProcedure, "VetecMarfilAdmin..usp_tbFacXP_List", arrPar);
                return ds.Tables[0];
            }
            catch (Exception e)
            {
                return null;
            }
        }
		#endregion

        #region QueryHelp
        public override string QueryHelp(int intEmpresa, int intSucursal, string[] parametros, int version)
        {
            string value = "";
            string parameter = "";

            for (int i = 0; i < parametros.Length; i++)
            {
                parameter = parameter + parametros[i].ToString() + ",";
            }

            SqlParameter[] arrPar = new SqlParameter[4];
            arrPar[0] = new SqlParameter("@intEmpresa", SqlDbType.Int);
            arrPar[0].Value = intEmpresa;
            arrPar[1] = new SqlParameter("@intSucursal", SqlDbType.Int);
            arrPar[1].Value = intSucursal;
            arrPar[2] = new SqlParameter("@intVersion", SqlDbType.Int);
            arrPar[2].Value = version;
            arrPar[3] = new SqlParameter("@strParametros", SqlDbType.VarChar);
            arrPar[3].Value = parameter;
            try
            {
                value = SqlHelper.ExecuteScalar(ConnectionString, CommandType.StoredProcedure, "usp_tbFacXP_Help", arrPar).ToString();
                //value = SqlHelper.ExecuteScalar(ConnectionString, CommandType.StoredProcedure, "VetecMarfilAdmin..usp_tbFacXP_Help", arrPar).ToString();
                return value;
            }
            catch (Exception e)
            {
                return "";
            }

            return value;
        }
        #endregion

        #region Fill
        public static Entity_Factura Fill(Entity_Factura obj)
        {
            IDataReader drd;
            Entity_Factura oEntity_Factura;
            oEntity_Factura = new Entity_Factura();

            SqlParameter[] arrPar = new SqlParameter[2];
            arrPar[0] = new SqlParameter("@intEmpresa", SqlDbType.Int);
            arrPar[0].Value = obj.IntEmpresa;
            arrPar[1] = new SqlParameter("@lngConsecutivo", SqlDbType.Int);
            arrPar[1].Value = obj.LngConsecutivo;

            try
            {
                drd = SqlHelper.ExecuteReader(ConnectionString, CommandType.StoredProcedure, "VetecMarfilAdmin..usp_tbFacXP_Fill", arrPar);
                if (drd.Read())
                {
                    oEntity_Factura = CreateObject(drd);
                }
                else
                    oEntity_Factura = null;
            }
            catch (Exception e)
            {
                oEntity_Factura = null;
            }

            return oEntity_Factura;
        }
		#endregion                  

        #region GetByProveedor
        public static string GetByProveedor(Entity_Factura obj)
        {
            string value;

            try
            {
                value = SqlHelper.ExecuteScalar(ConnectionString, CommandType.Text, "SELECT DISTINCT intProveedor FROM VetecMarfilAdmin..tbFacXP WHERE intEmpresa =" + obj.IntEmpresa.ToString() + " AND intContraRecibo=" + obj.IntContraRecibo.ToString()).ToString();               
            }
            catch (Exception e)
            {
                value = "";
            }

            return value;
        }
		#endregion 

        #region ValidaOC
        public static string ValidaOC(Entity_Factura obj)
        {
            string result = "";
    		
            SqlParameter[] arrPar = new SqlParameter[7];
            arrPar[0] = new SqlParameter("@intEmpresa", SqlDbType.Int);
            arrPar[0].Value = obj.IntEmpresa;
            arrPar[1] = new SqlParameter("@intProveedor", SqlDbType.Int);
            arrPar[1].Value = obj.IntProveedor;
            arrPar[2] = new SqlParameter("@intFolio", SqlDbType.Int);
            arrPar[2].Value = obj.StrFolio;
            arrPar[3] = new SqlParameter("@strFactura", SqlDbType.VarChar);
            arrPar[3].Value = obj.StrFactura;            
            arrPar[4] = new SqlParameter("@dblMonto", SqlDbType.Decimal);
            arrPar[4].Value = obj.DblTotal;
            arrPar[5] = new SqlParameter("@dblTipoCambio", SqlDbType.Decimal);
            arrPar[5].Value = obj.DblTipoCambio;
            arrPar[6] = new SqlParameter("@intMoneda", SqlDbType.Int);
            arrPar[6].Value = obj.IntTipoMoneda; 

            try
            {
                result = SqlHelper.ExecuteScalar(ConnectionString, CommandType.StoredProcedure, "VetecMarfilAdmin..usp_tbFacXP_ValidaOrden", arrPar).ToString();
            }
            catch (Exception e)
            {
                throw e;
            }

            return result;
        }
        #endregion          

        #region Create
        static Entity_Factura CreateObject(IDataReader drd)
        {
            Entity_Factura obj;
            obj = new Entity_Factura();

            obj.IntProveedor = (int)drd["IntProveedor"];
            obj.IntEstatus = (int)drd["IntEstatus"];
            obj.DatFechaFac = (string)drd["DatFechaFac"];
            obj.DatFechaVence = (string)drd["DatFechaVence"];
            obj.DatFechaRecepcion = (string)drd["DatFechaRecepcion"];
            obj.StrFactura = (string)drd["StrFactura"];
            obj.IntTipoMoneda = (int)drd["IntTipoMoneda"];
            obj.IntMovto = (int)drd["intMovto"];
            obj.StrFolio = (string)drd["strFolio"];
            obj.DblTotal = Convert.ToDecimal(drd["dblTotal"]);
            obj.StrClasifDS = (string)drd["StrClasifDS"];
            obj.StrConcepto = (string)drd["StrConcepto"];
            obj.StrPolProv = (string)drd["StrPolProv"];
            obj.IntContraRecibo = (int)drd["intContraRecibo"];
            obj.DblTipoCambio = Convert.ToDecimal(drd["DblTipoCambio"]);

            return obj;
        }
		#endregion
		
		#region Save
        public static string Save(Entity_Factura obj)
        {
            string result = "";
    		
            SqlParameter[] arrPar = new SqlParameter[19];
            arrPar[0] = new SqlParameter("@intEmpresa", SqlDbType.Int);
            arrPar[0].Value = obj.IntEmpresa;
            arrPar[1] = new SqlParameter("@intProveedor", SqlDbType.Int);
            arrPar[1].Value = obj.IntProveedor;
            arrPar[2] = new SqlParameter("@strFactura", SqlDbType.VarChar);
            arrPar[2].Value = obj.StrFactura;
            arrPar[3] = new SqlParameter("@datFechaFac", SqlDbType.DateTime);
            arrPar[3].Value = obj.DatFechaFac;
            arrPar[4] = new SqlParameter("@datFechaRecepcion", SqlDbType.DateTime);
            arrPar[4].Value = obj.DatFechaRecepcion;
            arrPar[5] = new SqlParameter("@datFechaVence", SqlDbType.DateTime);
            arrPar[5].Value = obj.DatFechaVence;
            arrPar[6] = new SqlParameter("@strFolio", SqlDbType.VarChar);
            arrPar[6].Value = obj.StrFolio;
            arrPar[7] = new SqlParameter("@strNombreProv", SqlDbType.VarChar);
            arrPar[7].Value = obj.StrNombreProv;
            arrPar[8] = new SqlParameter("@strCCProv", SqlDbType.VarChar);
            arrPar[8].Value = obj.StrCCProv;
            arrPar[9] = new SqlParameter("@intCondicionPago", SqlDbType.Int);
            arrPar[9].Value = obj.IntCondicionPago;
            arrPar[10] = new SqlParameter("@dblTotal", SqlDbType.Decimal);
            arrPar[10].Value = obj.DblTotal;
            arrPar[11] = new SqlParameter("@intMoneda", SqlDbType.Int);
            arrPar[11].Value = obj.IntTipoMoneda;
            arrPar[12] = new SqlParameter("@dblTipoCambio", SqlDbType.Decimal);
            arrPar[12].Value = obj.DblTipoCambio;
            arrPar[13] = new SqlParameter("@strConcepto", SqlDbType.VarChar);
            arrPar[13].Value = obj.StrConcepto;
            arrPar[14] = new SqlParameter("@intMovto", SqlDbType.Int);
            arrPar[14].Value = obj.IntMovto;
            arrPar[15] = new SqlParameter("@intContraRecibo", SqlDbType.Int);
            arrPar[15].Value = obj.IntContraRecibo;
            arrPar[16] = new SqlParameter("@strClasifDS", SqlDbType.VarChar);
            arrPar[16].Value = obj.StrClasifDS;
            arrPar[17] = new SqlParameter("@strUsuario", SqlDbType.VarChar);
            arrPar[17].Value = obj.StrUsuario;
            arrPar[18] = new SqlParameter("@strMaquina", SqlDbType.VarChar);
            arrPar[18].Value = obj.StrMaquina;

            try
            {
                result = SqlHelper.ExecuteScalar(ConnectionString, CommandType.StoredProcedure, "VetecMarfilAdmin..usp_tbFacXP_Save", arrPar).ToString();
            }
            catch (Exception e)
            {
                throw e;
            }

            return result;
        }
        #endregion

        #region SaveDig
        public static string SaveDig(Entity_Factura obj)
        {
            string result = "";

            SqlParameter[] arrPar = new SqlParameter[23];
            arrPar[0] = new SqlParameter("@intEmpresa", SqlDbType.Int);
            arrPar[0].Value = obj.IntEmpresa;
            arrPar[1] = new SqlParameter("@intProveedor", SqlDbType.Int);
            arrPar[1].Value = obj.IntProveedor;
            arrPar[2] = new SqlParameter("@strFactura", SqlDbType.VarChar);
            arrPar[2].Value = obj.StrFactura;
            arrPar[3] = new SqlParameter("@datFechaFac", SqlDbType.DateTime);
            arrPar[3].Value = obj.DatFechaFac;
            arrPar[4] = new SqlParameter("@datFechaRecepcion", SqlDbType.DateTime);
            arrPar[4].Value = obj.DatFechaRecepcion;
            arrPar[5] = new SqlParameter("@datFechaVence", SqlDbType.DateTime);
            arrPar[5].Value = obj.DatFechaVence;
            arrPar[6] = new SqlParameter("@strFolio", SqlDbType.VarChar);
            arrPar[6].Value = obj.StrFolio;
            arrPar[7] = new SqlParameter("@strNombreProv", SqlDbType.VarChar);
            arrPar[7].Value = obj.StrNombreProv;
            arrPar[8] = new SqlParameter("@strCCProv", SqlDbType.VarChar);
            arrPar[8].Value = obj.StrCCProv;
            arrPar[9] = new SqlParameter("@intCondicionPago", SqlDbType.Int);
            arrPar[9].Value = obj.IntCondicionPago;
            arrPar[10] = new SqlParameter("@dblTotal", SqlDbType.Decimal);
            arrPar[10].Value = obj.DblTotal;
            arrPar[11] = new SqlParameter("@intMoneda", SqlDbType.Int);
            arrPar[11].Value = obj.IntTipoMoneda;
            arrPar[12] = new SqlParameter("@dblTipoCambio", SqlDbType.Decimal);
            arrPar[12].Value = obj.DblTipoCambio;
            arrPar[13] = new SqlParameter("@strConcepto", SqlDbType.VarChar);
            arrPar[13].Value = obj.StrConcepto;
            arrPar[14] = new SqlParameter("@intMovto", SqlDbType.Int);
            arrPar[14].Value = obj.IntMovto;
            arrPar[15] = new SqlParameter("@intContraRecibo", SqlDbType.Int);
            arrPar[15].Value = obj.IntContraRecibo;
            arrPar[16] = new SqlParameter("@strClasifDS", SqlDbType.VarChar);
            arrPar[16].Value = obj.StrClasifDS;
            arrPar[17] = new SqlParameter("@FilePDF", SqlDbType.VarBinary);
            arrPar[17].Value = obj.FilePDF;
            arrPar[18] = new SqlParameter("@FilePDFName", SqlDbType.VarChar);
            arrPar[18].Value = obj.FilePDFName;
            arrPar[19] = new SqlParameter("@FileXML", SqlDbType.VarBinary);
            arrPar[19].Value = obj.FileXML;
            arrPar[20] = new SqlParameter("@strOCR", SqlDbType.VarChar);
            arrPar[20].Value = obj.StrOCR;
            arrPar[21] = new SqlParameter("@strUsuario", SqlDbType.VarChar);
            arrPar[21].Value = obj.StrUsuario;
            arrPar[22] = new SqlParameter("@strMaquina", SqlDbType.VarChar);
            arrPar[22].Value = obj.StrMaquina;

            try
            { 
                result = SqlHelper.ExecuteScalar(ConnectionString, CommandType.StoredProcedure, "VetecMarfilAdmin..usp_tbFacXP_Dig_Save", arrPar).ToString();
            }
            catch (Exception e)
            {
                throw e;
            }

            return result;
        }
        #endregion

        #region Delete
        public static bool Delete(Entity_Factura obj)
			{

                bool bResult = false;

                SqlParameter[] arrPar = new SqlParameter[2];
                arrPar[0] = new SqlParameter("@intEmpresa", SqlDbType.Int);
                arrPar[0].Value = obj.IntEmpresa;
                arrPar[1] = new SqlParameter("@lngConsecutivo", SqlDbType.Int);
                arrPar[1].Value = obj.LngConsecutivo;

                try
                {
                    SqlHelper.ExecuteNonQuery(ConnectionString, CommandType.StoredProcedure, "VetecMarfilAdmin..usp_tbFacXP_Del", arrPar);
                    bResult = false;
                }
                catch (Exception e)
                {
                    throw e;
                }

                return bResult;									
			}

        #endregion Delete

        #region DeleteContraRecibo
        public static bool DeleteContraRecibo(Entity_Factura obj)
        {

            bool bResult = false;

            SqlParameter[] arrPar = new SqlParameter[2];
            arrPar[0] = new SqlParameter("@intEmpresa", SqlDbType.Int);
            arrPar[0].Value = obj.IntEmpresa;
            arrPar[1] = new SqlParameter("@intContrarecibo", SqlDbType.Int);
            arrPar[1].Value = obj.IntContraRecibo;

            try
            {
                SqlHelper.ExecuteNonQuery(ConnectionString, CommandType.StoredProcedure, "VetecMarfilAdmin..usp_tbFacXP_ContraRecibo_Del", arrPar);
                bResult = false;
            }
            catch (Exception e)
            {
                throw e;
            }

            return bResult;
        }

        #endregion Delete

        #region GetListEmail
        public static DataTable GetListEmail(Entity_Factura obj)
        {
            DataSet ds;

            SqlParameter[] arrPar = new SqlParameter[11];
            arrPar[0] = new SqlParameter("@intEmpresa", SqlDbType.Int);
            arrPar[0].Value = obj.IntEmpresa;
            arrPar[1] = new SqlParameter("@intProveedor", SqlDbType.Int);
            arrPar[1].Value = obj.IntProveedor;
            arrPar[2] = new SqlParameter("@datFechaIni", SqlDbType.VarChar);
            arrPar[2].Value = obj.StrFechaInicial;
            arrPar[3] = new SqlParameter("@datFechaFin", SqlDbType.VarChar);
            arrPar[3].Value = obj.StrFechaFinal;
            arrPar[4] = new SqlParameter("@intEnviado", SqlDbType.Int);
            arrPar[4].Value = obj.IntEnviado;
            arrPar[5] = new SqlParameter("@intDirection", SqlDbType.Int);
            arrPar[5].Value = obj.SortDirection;
            arrPar[6] = new SqlParameter("@SortExpression", SqlDbType.VarChar);
            arrPar[6].Value = obj.SortExpression;
            arrPar[7] = new SqlParameter("@NumPage", SqlDbType.Int);
            arrPar[7].Value = obj.iNumPage;
            arrPar[8] = new SqlParameter("@NumRecords", SqlDbType.Int);
            arrPar[8].Value = obj.iNumRecords;
            arrPar[9] = new SqlParameter("@TotalRows", SqlDbType.Int);
            arrPar[9].Direction = ParameterDirection.Output;
            arrPar[10] = new SqlParameter("@TotalPage", SqlDbType.Int);
            arrPar[10].Direction = ParameterDirection.Output;

            try
            {
                ds = SqlHelper.ExecuteDataset(ConnectionString, CommandType.StoredProcedure, "VetecMarfilAdmin..usp_tbFacXP_ListEmail", arrPar);
                obj.IntTotalPages = (int)arrPar[10].Value;
                obj.IntTotalRecords = (int)arrPar[9].Value;
                return ds.Tables[0];
            }
            catch (Exception e)
            {
                return null;
            }
        }
		#endregion

        #region EmailSave
        public static bool EmailSave(Entity_Factura obj)
        {

            bool bResult = false;

            try
            {
                SqlHelper.ExecuteNonQuery(ConnectionString, CommandType.Text, "INSERT INTO VetecMarfilAdmin..tbFacXPEmail(intEmpresa,intProveedor,intContraRecibo) VALUES(" + obj.IntEmpresa + "," + obj.IntProveedor + "," + obj.IntContraRecibo + ") SELECT @@Error ");
                bResult = false;
            }
            catch (Exception e)
            {
                throw e;
            }

            return bResult;
        }
        #endregion Delete

        #region GetListMov
        public static DataTable GetListMov(Entity_Factura obj)
        {
            DataSet ds;

            SqlParameter[] arrPar = new SqlParameter[6];
            arrPar[0] = new SqlParameter("@intEmpresa", SqlDbType.Int);
            arrPar[0].Value = obj.IntEmpresa;
            arrPar[1] = new SqlParameter("@intProveedor", SqlDbType.Int);
            arrPar[1].Value = obj.IntProveedor;
            arrPar[2] = new SqlParameter("@datFechaCorte", SqlDbType.VarChar);
            arrPar[2].Value = obj.DatFechaFac;
            arrPar[3] = new SqlParameter("@intSaldo", SqlDbType.VarChar);
            arrPar[3].Value = obj.IntEstatus;
            arrPar[4] = new SqlParameter("@intDirection", SqlDbType.Int);
            arrPar[4].Value = obj.SortDirection;
            arrPar[5] = new SqlParameter("@SortExpression", SqlDbType.VarChar);
            arrPar[5].Value = obj.SortExpression;

            try
            {
                ds = SqlHelper.ExecuteDataset(ConnectionString, CommandType.StoredProcedure, "VetecMarfilAdmin..usp_tbFacXP_ListMov", arrPar);
                return ds.Tables[0];
            }
            catch (Exception e)
            {
                return null;
            }
        }
        #endregion
	}
}
