/*
'===============================================================================
'  Company: RMM
'  Autor: Rubén Mora Martínez
'  Date: 2011-07-29
'  **** Generated by MyGeneration Version # (1.3.0.3) ****
'===============================================================================
*/

using System;
using System.Data;
using System.Data.SqlClient;
using System.Collections;
using System.Collections.Specialized;
using Microsoft.ApplicationBlocks.Data;
using Contabilidad.Entity;

namespace Contabilidad.DataAccess
{
    public class DACArticulo : Base
	{
        #region GetList
        public static DataTable GetList(Entity_Articulo Ciudades)
        {
            DataSet ds;

            SqlParameter[] arrPar = new SqlParameter[4];
            //arrPar[0] = new SqlParameter("@intEstado", SqlDbType.Int);
            //arrPar[0].Value = Ciudades.IntEstado;
            //arrPar[1] = new SqlParameter("@intMunicipio", SqlDbType.Int);
            //arrPar[1].Value = 0;

            try
            {
                ds = SqlHelper.ExecuteDataset(ConnectionString, CommandType.StoredProcedure, "qryMunicipio_Sel", arrPar);
                return ds.Tables[0];
            }
            catch (Exception e)
            {
                return null;
            }
        }
        #endregion
			
	    #region Fill
        public static Entity_Articulo Fill(int IdUser)
			{
                IDataReader drd;
                Entity_Articulo oEntity_Articulo;
                oEntity_Articulo = new Entity_Articulo();

                SqlParameter[] arrPar = new SqlParameter[1];
                arrPar[0] = new SqlParameter("@p_IdUser", SqlDbType.Int);
                arrPar[0].Value = IdUser;

                try
                {
                    drd = SqlHelper.ExecuteReader(ConnectionString, CommandType.StoredProcedure, "usp_catUser_sel", arrPar);
                    if (drd.Read())
                    {
                        oEntity_Articulo = CreateObject(drd);
                    }
                }
                catch (Exception e)
                {
                    oEntity_Articulo = null;
                }

                return oEntity_Articulo;									
			}
			#endregion            

        #region PresupuestoReq
        public static Entity_Articulo PresupuestoReq(Entity_Articulo obj)
            {
                IDataReader drd;
                Entity_Articulo oEntity_Articulo;
                oEntity_Articulo = new Entity_Articulo();

                SqlParameter[] arrPar = new SqlParameter[4];
                arrPar[0] = new SqlParameter("@intEmpresa", SqlDbType.Int);
                arrPar[0].Value = obj.IntEmpresa;
                arrPar[1] = new SqlParameter("@intSucursal", SqlDbType.Int);
                arrPar[1].Value = obj.IntSucursal;
                arrPar[2] = new SqlParameter("@strArticulo", SqlDbType.VarChar);
                arrPar[2].Value = obj.StrNombreCorto;
                arrPar[3] = new SqlParameter("@intObra", SqlDbType.Int);
                arrPar[3].Value = obj.IntObra;

                try
                {
                    drd = SqlHelper.ExecuteReader(ConnectionString, CommandType.StoredProcedure, "usp_tbControlObra_Presupuesto_Req", arrPar);
                    if (drd.Read())
                    {
                        oEntity_Articulo = CreateObject2(drd);
                    }
                    else
                        oEntity_Articulo = null;
                }
                catch (Exception e)
                {
                    oEntity_Articulo = null;
                }

                return oEntity_Articulo;
            }
        #endregion PresupuestoReq

            #region PresupuestoOC
            public static Entity_Articulo PresupuestoOC(Entity_Articulo obj)
        {
            IDataReader drd;
            Entity_Articulo oEntity_Articulo;
            oEntity_Articulo = new Entity_Articulo();

            SqlParameter[] arrPar = new SqlParameter[4];
            arrPar[0] = new SqlParameter("@intEmpresa", SqlDbType.Int);
            arrPar[0].Value = obj.IntEmpresa;
            arrPar[1] = new SqlParameter("@intSucursal", SqlDbType.Int);
            arrPar[1].Value = obj.IntSucursal;
            arrPar[2] = new SqlParameter("@strArticulo", SqlDbType.VarChar);
            arrPar[2].Value = obj.StrNombreCorto;
            arrPar[3] = new SqlParameter("@intObra", SqlDbType.Int);
            arrPar[3].Value = obj.IntObra;

            try
            {
                drd = SqlHelper.ExecuteReader(ConnectionString, CommandType.StoredProcedure, "usp_tbControlObra_Presupuesto_OC", arrPar);
                if (drd.Read())
                {
                    oEntity_Articulo = CreateObject2(drd);
                }
                else
                    oEntity_Articulo = null;
            }
            catch (Exception e)
            {
                oEntity_Articulo = null;
            }

            return oEntity_Articulo;
        }
        #endregion PresupuestoReq

        #region Create
            static Entity_Articulo CreateObject(IDataReader drd)
            {
                Entity_Articulo oEnt_catUser;
                oEnt_catUser = new Entity_Articulo();

                //oEnt_catUser.StrUsuario = (string)drd["strUsuario"];
                //oEnt_catUser.StrNombre = (string)drd["strNombre"];
                //oEnt_catUser.StrEmail = (string)drd["strEmail"];
                //oEnt_catUser.IntPerfil = (int)drd["intPerfil"];
                //oEnt_catUser.StrNombrePerfil = (string)drd["strNombrePerfil"];
				
				return oEnt_catUser;
            }
			#endregion

        #region Create
        static Entity_Articulo CreateObject2(IDataReader drd)
        {
            Entity_Articulo obj;
            obj = new Entity_Articulo();

            obj.IntArticulo = (int)drd["intArticulo"];
            obj.StrNombreCorto = (string)drd["strNombreCorto"];
            obj.StrNombre = (string)drd["strNombre"];
            obj.Unidad = (string)drd["NomUnidad"];
            obj.IntUnidadMedidaCompra = (int)drd["intUnidad"];
            obj.DblPrecioPermitido = Convert.ToDouble(drd["dblPrecioPermitido"]);
            obj.DblCantidadPermitida = Convert.ToDouble(drd["dblCantidadPermitida"]);

            return obj;
        }
        #endregion
		
        #region Create
        static Entity_Articulo CreateObject3(IDataReader drd)
        {
            Entity_Articulo obj;
            obj = new Entity_Articulo();

            obj.IntArticulo = (int)drd["intArticulo"];
            obj.StrNombreCorto = (string)drd["strNombreCorto"];
            obj.StrNombre = (string)drd["strNombre"];

            return obj;
        }
        #endregion

        #region  Sel
        public static Entity_Articulo Sel(Entity_Articulo obj)
        {
            IDataReader drd;
            Entity_Articulo oEntity_Articulo;
            oEntity_Articulo = new Entity_Articulo();

            SqlParameter[] arrPar = new SqlParameter[3];
            arrPar[0] = new SqlParameter("@intEmpresa", SqlDbType.Int);
            arrPar[0].Value = obj.IntEmpresa;
            arrPar[1] = new SqlParameter("@intSucursal", SqlDbType.Int);
            arrPar[1].Value = obj.IntSucursal;
            arrPar[2] = new SqlParameter("@strNombreCorto", SqlDbType.VarChar);
            arrPar[2].Value = obj.StrNombreCorto;

            try
            {
                drd = SqlHelper.ExecuteReader(ConnectionString, CommandType.StoredProcedure, "usp_tbArticulo_Sel", arrPar);
                if (drd.Read())
                {
                    oEntity_Articulo = CreateObject3(drd);
                }
                else
                    oEntity_Articulo = null;
            }
            catch (Exception e)
            {
                oEntity_Articulo = null;
            }

            return oEntity_Articulo;
        }
        #endregion Sel


        #region QueryHelp
        public override string QueryHelp(int intEmpresa, int intSucursal, string[] parametros, int version)
        {
            string value = "";
            string parameter = "";

            for (int i = 0; i < parametros.Length; i++)
            {
                parameter = parameter + parametros[i].ToString() + ",";
            }

            SqlParameter[] arrPar = new SqlParameter[4];
            arrPar[0] = new SqlParameter("@intEmpresa", SqlDbType.Int);
            arrPar[0].Value = intEmpresa;
            arrPar[1] = new SqlParameter("@intSucursal", SqlDbType.Int);
            arrPar[1].Value = intSucursal;
            arrPar[2] = new SqlParameter("@intVersion", SqlDbType.Int);
            arrPar[2].Value = version;
            arrPar[3] = new SqlParameter("@strParametros", SqlDbType.VarChar);
            arrPar[3].Value = parameter;
            try
            {
                value = SqlHelper.ExecuteScalar(ConnectionString, CommandType.StoredProcedure, "usp_tbArticulo_Help", arrPar).ToString();
                return value;
            }
            catch (Exception e)
            {
                return "";
            }
        }
        #endregion

	}
}
