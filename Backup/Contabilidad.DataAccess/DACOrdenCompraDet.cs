/*
'===============================================================================
'  Company: RMM
'  Autor: Rubén Mora Martínez
'  Date: 2011-07-29
'  **** Generated by MyGeneration Version # (1.3.0.3) ****
'===============================================================================
*/

using System;
using System.Data;
using System.Data.SqlClient;
using System.Collections;
using System.Collections.Specialized;
using Microsoft.ApplicationBlocks.Data;
using Contabilidad.Entity;

namespace Contabilidad.DataAccess
{
    public class DACOrdenCompraDet : Base
	{

        #region GetList
        public static DataTable GetList(Entity_OrdenCompraDet obj)
        {
            DataSet ds;

            SqlParameter[] arrPar = new SqlParameter[2];
            arrPar[0] = new SqlParameter("@intEmpresa", SqlDbType.Int);
            arrPar[0].Value = obj.IntEmpresa;
            arrPar[1] = new SqlParameter("@intOrdenCompraEnc", SqlDbType.Int);
            arrPar[1].Value = obj.IntOrdenCompraEnc;

            try
            {
                ds = SqlHelper.ExecuteDataset(ConnectionString, CommandType.StoredProcedure, "usp_tbOrdenCompraDet_List", arrPar);
                return ds.Tables[0];
            }
            catch (Exception e)
            {
                return null;
            }
        }
	    #endregion					          

        #region Fill
        public static Entity_OrdenCompraDet Fill(Entity_OrdenCompraDet obj)
        {
            IDataReader drd;
            Entity_OrdenCompraDet oEntity_OrdenCompraDet;
            oEntity_OrdenCompraDet = new Entity_OrdenCompraDet();

            SqlParameter[] arrPar = new SqlParameter[3];
            arrPar[0] = new SqlParameter("@intEmpresa", SqlDbType.Int);
            arrPar[0].Value = obj.IntEmpresa;
            arrPar[1] = new SqlParameter("@intOrdenCompraEnc", SqlDbType.Int);
            arrPar[1].Value = obj.IntOrdenCompraEnc;
            arrPar[2] = new SqlParameter("@intOrdenCompraDet", SqlDbType.Int);
            arrPar[2].Value = obj.IntOrdenCompraDet;

            try
            {
                drd = SqlHelper.ExecuteReader(ConnectionString, CommandType.StoredProcedure, "usp_tbOrdenCompraDet_FillById", arrPar);
                if (drd.Read())
                {
                    oEntity_OrdenCompraDet = CreateObject(drd);
                }
            }
            catch (Exception e)
            {
                oEntity_OrdenCompraDet = null;
            }

            return oEntity_OrdenCompraDet;
        }
		#endregion            
        
        #region Create
        static Entity_OrdenCompraDet CreateObject(IDataReader drd)
        {
            Entity_OrdenCompraDet obj;
            obj = new Entity_OrdenCompraDet();

            obj.IntPartida = (int)drd["intPartida"];
            obj.IntOrdenCompraDet = (int)drd["IntOrdenCompraDet"];
            obj.IntArticulo = (int)drd["intArticulo"];
            obj.StrNombreCorto = (string)drd["strNombreCorto"];
            obj.StrNombreArticulo = (string)drd["strNombre"];
            obj.DblCantidad = Convert.ToDouble(drd["dblCantidad"]);
            obj.DblPrecio = Convert.ToDouble(drd["DblPrecio"]);
            //obj.DblPrecioPermitido = Convert.ToDouble(drd["DblPrecioPermitido"]);
            obj.StrUnidadMedida = (string)drd["Unidad"];
            obj.DatFechaEntrega = (string)drd["DatFechaEntrega"];

            return obj;
        }
		#endregion		

		#region Save
        public static string Save(Entity_OrdenCompraDet obj)
        {
            string bResult = "";

            SqlParameter[] arrPar = new SqlParameter[11];
            arrPar[0] = new SqlParameter("@intEmpresa", SqlDbType.Int);
            arrPar[0].Value = obj.IntEmpresa;
            arrPar[1] = new SqlParameter("@intSucursal", SqlDbType.Int);
            arrPar[1].Value = obj.IntSucursal;
            arrPar[2] = new SqlParameter("@intOrdenCompraEnc", SqlDbType.Int);
            arrPar[2].Value = obj.IntOrdenCompraEnc;
            arrPar[3] = new SqlParameter("@intOrdenCompraDet", SqlDbType.Int);
            arrPar[3].Value = obj.IntOrdenCompraDet;
            arrPar[4] = new SqlParameter("@intArticulo", SqlDbType.Int);
            arrPar[4].Value = obj.IntArticulo;
            arrPar[5] = new SqlParameter("@datFechaEntrega", SqlDbType.VarChar);
            arrPar[5].Value = obj.DatFechaEntrega;
            arrPar[6] = new SqlParameter("@dblCantidad", SqlDbType.Decimal);
            arrPar[6].Value = obj.DblCantidad;
            arrPar[7] = new SqlParameter("@dblPrecio", SqlDbType.Decimal);
            arrPar[7].Value = obj.DblPrecio;
            arrPar[8] = new SqlParameter("@strDescripcion", SqlDbType.VarChar);
            arrPar[8].Value = obj.StrDescripcion;
            arrPar[9] = new SqlParameter("@strUsuario", SqlDbType.VarChar);
            arrPar[9].Value = obj.StrUsuario;
            arrPar[10] = new SqlParameter("@strMaquina", SqlDbType.VarChar);
            arrPar[10].Value = obj.StrMaquina;                   
	         
            try
            {
                bResult = SqlHelper.ExecuteNonQuery(ConnectionString, CommandType.StoredProcedure, "usp_tbOrdenCompraDet_Save", arrPar).ToString();
            }
            catch (Exception e)
            {
                throw e;
            }

            return bResult;
        }
        #endregion		
		
		#region Delete	
        public static bool Delete(Entity_OrdenCompraDet obj)
        {

            bool bResult = false;

            SqlParameter[] arrPar = new SqlParameter[4];
            arrPar[0] = new SqlParameter("@intEmpresa", SqlDbType.Int);
            arrPar[0].Value = obj.IntEmpresa;
            arrPar[1] = new SqlParameter("@intSucursal", SqlDbType.Int);
            arrPar[1].Value = obj.IntSucursal;
            arrPar[2] = new SqlParameter("@intOrdenCompraEnc", SqlDbType.Int);
            arrPar[2].Value = obj.IntOrdenCompraEnc;
            arrPar[3] = new SqlParameter("@intOrdenCompraDet", SqlDbType.Int);
            arrPar[3].Value = obj.IntOrdenCompraDet;

            try
            {
                SqlHelper.ExecuteNonQuery(ConnectionString, CommandType.StoredProcedure, "usp_tbOrdenCompraDet_Del", arrPar);
                bResult = false;
            }
            catch (Exception e)
            {
                bResult = true;
            }

            return bResult;
        }

        #endregion Delete       

	}
}
