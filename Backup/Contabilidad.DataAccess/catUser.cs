/*
'===============================================================================
'  Company: RMM
'  Autor: Rubén Mora Martínez
'  Date: 2011-07-29
'  **** Generated by MyGeneration Version # (1.3.0.3) ****
'===============================================================================
*/

using System;
using System.Data;
using System.Data.SqlClient;
using System.Collections;
using System.Collections.Specialized;
using Microsoft.ApplicationBlocks.Data;
using Contabilidad.Entity;

namespace Contabilidad.DataAccess
{
    public class catUser : Base
	{

        #region Variables

        int _ReturnValue;
        public int ReturnValue
        {
            get { return _ReturnValue; }
            set { _ReturnValue = value; }
        }
        #endregion Variables 
		
		public catUser()
		{
		}

		#region ObtenerInformacion

			#region GetList
			public DataTable GetList(Entity_Usuarios oEnt_catUser)
			{
                DataSet ds;

                SqlParameter[] arrPar = new SqlParameter[10];
                //arrPar[0] = new SqlParameter("@p_IdUser", SqlDbType.Int);
                //arrPar[0].Value = oEnt_catUser.IdUser;
                //arrPar[1] = new SqlParameter("@p_VcUserShort", SqlDbType.VarChar);
                //arrPar[1].Value = oEnt_catUser.VcUserShort;
                //arrPar[2] = new SqlParameter("@p_VcUserName", SqlDbType.VarChar);
                //arrPar[2].Value = oEnt_catUser.VcUserName;
                //arrPar[3] = new SqlParameter("@p_VcMail", SqlDbType.VarChar);
                //arrPar[3].Value = oEnt_catUser.VcMail;
                //arrPar[4] = new SqlParameter("@p_IdRol", SqlDbType.Int);
                //arrPar[4].Value = oEnt_catUser.IdRol;
                //arrPar[5] = new SqlParameter("@p_BActivo", SqlDbType.Bit);
                //arrPar[5].Value = oEnt_catUser.BActivo;
                //arrPar[6] = new SqlParameter("@p_iNumPage", SqlDbType.Int);
                //arrPar[6].Value = oEnt_catUser.iNumPage;
                //arrPar[7] = new SqlParameter("@p_iNumRecords", SqlDbType.Int);
                //arrPar[7].Value = oEnt_catUser.iNumRecords;
                //arrPar[8] = new SqlParameter("@p_SortDirection", SqlDbType.TinyInt);
                //arrPar[8].Value = oEnt_catUser.SortDirection;
                //arrPar[9] = new SqlParameter("@p_SortExpression", SqlDbType.VarChar);
                //arrPar[9].Value = oEnt_catUser.SortExpression;

                try
                {
                    ds = SqlHelper.ExecuteDataset(ConnectionString, CommandType.StoredProcedure, "usp_catUser_sel", arrPar);
                    return ds.Tables[0];
                }
                catch (Exception e)
                {
                    return null;
                }														
			}
			#endregion
			
			#region Fill
			public Entity_Usuarios Fill(int IdUser)
			{
                IDataReader drd;
                Entity_Usuarios oEntity_Usuarios;
                oEntity_Usuarios = new Entity_Usuarios();

                SqlParameter[] arrPar = new SqlParameter[1];
                arrPar[0] = new SqlParameter("@p_IdUser", SqlDbType.Int);
                arrPar[0].Value = IdUser;

                try
                {
                    drd = SqlHelper.ExecuteReader(ConnectionString, CommandType.StoredProcedure, "usp_catUser_sel", arrPar);
                    if (drd.Read())
                    {
                        oEntity_Usuarios = CreateObject(drd);
                    }
                }
                catch (Exception e)
                {
                    oEntity_Usuarios = null;
                }

                return oEntity_Usuarios;									
			}
			#endregion            

            #region Login
            public Entity_Usuarios Login(string login)
            {
                IDataReader drd;
                Entity_Usuarios oEntity_Usuarios;
                oEntity_Usuarios = new Entity_Usuarios();

                SqlParameter[] arrPar = new SqlParameter[1];
                arrPar[0] = new SqlParameter("@p_Login", SqlDbType.VarChar);
                arrPar[0].Value = login;

                try
                {
                    drd = SqlHelper.ExecuteReader(ConnectionString, CommandType.StoredProcedure, "usp_tbUsuarios_Login", arrPar);
                    if (drd.Read())
                    {
                        oEntity_Usuarios = CreateObject(drd);
                    }
                }
                catch (Exception e)
                {
                    oEntity_Usuarios = null;
                }

                return oEntity_Usuarios;			                               
            }
            #endregion Login

        #endregion

            #region Create
        Entity_Usuarios CreateObject(IDataReader drd)
            {
                Entity_Usuarios oEnt_catUser;
                oEnt_catUser = new Entity_Usuarios();

                //oEnt_catUser.IntUsuario = (int)drd["IntUsuario"];
                //oEnt_catUser.StrUsuario = (string)drd["StrUsuario"];
                //oEnt_catUser.StrNombre = (string)drd["StrNombre"];
                //oEnt_catUser.StrEmail = (string)drd["StrEmail"];
                //oEnt_catUser.IntRol = (int)drd["IntRol"];
                //oEnt_catUser.BActivo = Convert.ToBoolean(drd["BActivo"]);
                //oEnt_catUser.StrNombreRol = (string)drd["StrNombreRol"];

                oEnt_catUser.iNumPage = (int)drd["iTotalPages"];
                oEnt_catUser.iNumRecords = (int)drd["iTotalRecords"];
				
				return oEnt_catUser;
            }
			#endregion

		#region ActualizarInformacion

		#region Insert
        public bool Insert(Entity_Usuarios oEnt_catUser)
        {
            bool bResult = false;

            SqlParameter[] arrPar = new SqlParameter[6];
            //arrPar[0] = new SqlParameter("@p_IdUser", SqlDbType.Int);
            //arrPar[0].Direction = System.Data.ParameterDirection.ReturnValue;
            //arrPar[1] = new SqlParameter("@p_VcUserShort", SqlDbType.VarChar);
            //arrPar[1].Value = oEnt_catUser.VcUserShort;
            //arrPar[2] = new SqlParameter("@p_VcUserName", SqlDbType.VarChar);
            //arrPar[2].Value = oEnt_catUser.VcUserName;
            //arrPar[3] = new SqlParameter("@p_VcMail", SqlDbType.VarChar);
            //arrPar[3].Value = oEnt_catUser.VcMail;
            //arrPar[4] = new SqlParameter("@p_IdRol", SqlDbType.Int);
            //arrPar[4].Value = oEnt_catUser.IdRol;
            //arrPar[5] = new SqlParameter("@p_BActivo", SqlDbType.TinyInt);
            //arrPar[5].Value = oEnt_catUser.BActivo;

            //try
            //{
            //    SqlHelper.ExecuteNonQuery(ConnectionString, CommandType.StoredProcedure, "usp_catUser_ins", arrPar);
            //    if (arrPar[0].Value != DBNull.Value)
            //        oEnt_catUser.IdRol = Convert.ToInt32(arrPar[0].Value);
            //    bResult = true;
            //}
            //catch (Exception e)
            //{
            //    bResult = false;
            //}

            return bResult;
        }

			#endregion
			
			#region Update	
			public bool Update(Entity_Usuarios oEnt_catUser)
			{
                bool bResult;

                SqlParameter[] arrPar = new SqlParameter[6];
                //arrPar[0] = new SqlParameter("@p_IdUser", SqlDbType.Int);
                //arrPar[0].Value = oEnt_catUser.IdUser;
                //arrPar[1] = new SqlParameter("@p_VcUserShort", SqlDbType.VarChar);
                //arrPar[1].Value = oEnt_catUser.VcUserShort;
                //arrPar[2] = new SqlParameter("@p_VcUserName", SqlDbType.VarChar);
                //arrPar[2].Value = oEnt_catUser.VcUserName;
                //arrPar[3] = new SqlParameter("@p_VcMail", SqlDbType.VarChar);
                //arrPar[3].Value = oEnt_catUser.VcMail;
                //arrPar[4] = new SqlParameter("@p_IdRol", SqlDbType.Int);
                //arrPar[4].Value = oEnt_catUser.IdRol;
                //arrPar[5] = new SqlParameter("@p_BActivo", SqlDbType.TinyInt);
                //arrPar[5].Value = oEnt_catUser.BActivo;

                try
                {
                    SqlHelper.ExecuteNonQuery(ConnectionString, CommandType.StoredProcedure, "usp_catUser_upd", arrPar);
                    bResult = true;
                }
                catch (Exception e)
                {
                    bResult = false;
                }

                return bResult;						
			}
			#endregion		
		
		#region Delete	
			public bool Delete(Entity_Usuarios oEnt_catUser)
			{

                bool bResult = false;

                SqlParameter[] arrPar = new SqlParameter[2];
                //arrPar[0] = new SqlParameter("@p_IdUser", SqlDbType.Int);
                //arrPar[0].Value = oEnt_catUser.IntUsuario;
                //arrPar[1] = new SqlParameter("@ReturnValue", SqlDbType.Int);
                //arrPar[1].Direction = System.Data.ParameterDirection.ReturnValue;

                try
                {
                    SqlHelper.ExecuteNonQuery(ConnectionString, CommandType.StoredProcedure, "usp_catUser_del", arrPar);
                    this.ReturnValue = Convert.ToInt32(arrPar[1].Value);
                    bResult = false;
                }
                catch (Exception e)
                {
                    bResult = true;
                }

                return bResult;									
			}

        #endregion Delete
	#endregion
	}
}
